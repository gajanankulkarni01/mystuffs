#include <string>
#include <type_traits>

template<typename TChannel>
class SampleServiceClient : public System::ServiceModel::ClientBase<TChannel>
{
	static_assert(std::is_class<TChannel>::value, L"TChannel must be a class");


public:
	SampleServiceClient()
	{
	}

	SampleServiceClient(const std::wstring &endpointConfigurationName) : System::ServiceModel::ClientBase<TChannel>(endpointConfigurationName)
	{
	}

	SampleServiceClient(const std::wstring &endpointConfigurationName, const std::wstring &remoteAddress) : System::ServiceModel::ClientBase<TChannel>(endpointConfigurationName, remoteAddress)
	{
	}

	SampleServiceClient(const std::wstring &endpointConfigurationName, System::ServiceModel::EndpointAddress *remoteAddress) : System::ServiceModel::ClientBase<TChannel>(endpointConfigurationName, remoteAddress)
	{
	}

	SampleServiceClient(System::ServiceModel::Channels::Binding *binding, System::ServiceModel::EndpointAddress *remoteAddress) : System::ServiceModel::ClientBase<TChannel>(binding, remoteAddress)
	{
	}

	std::wstring SampleMethod(const std::wstring &msg)
	{
		return System::ServiceModel::ClientBase<TChannel>::getChannel().SampleMethod(msg);
	}
};
--------------------------------------------------------------------------------------------------------------------------------------
public partial class SampleServiceClient<TChannel> : System.ServiceModel.ClientBase<TChannel> where TChannel : class
{
    
    public SampleServiceClient()
    {
    }
    
    public SampleServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public SampleServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public SampleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public SampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string SampleMethod(string msg)
    {
        return base.Channel.SampleMethod(msg);
    }
}